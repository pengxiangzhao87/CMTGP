#配置中 cron4j 是入口，后面的 newCron 是任务名称，可以随便起名，这个例子中起的名字是 "newCron"
#一旦起了这个名称，后面的配置就是以这个 "newCron" 打头，例如 newCron.cron、newCron.class等等
cron4j=newCron

#newCron
#cron 表达式由五部分组成：分 时 天 月 周
# 分 ：从 0 到 59
# 时 ：从 0 到 23
# 天 ：从 1 到 31，字母 L 可以表示月的最后一天
# 月 ：从 1 到 12，可以别名：jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov" and "dec"
# 周 ：从 0 到 6，0 表示周日，6 表示周六，可以使用别名： "sun", "mon", "tue", "wed", "thu", "fri" and "sat"
#
# 数字 n：表示一个具体的时间点，例如 5 * * * * 表示 5 分这个时间点时执行
# 逗号 , ：表示指定多个数值，例如 3,5 * * * * 表示 3 和 5 分这两个时间点执行
# 减号 -：表示范围，例如 1-3 * * * * 表示 1 分、2 分再到 3 分这三个时间点执行
# 星号 *：表示每一个时间点，例如 * * * * * 表示每分钟执行
# 除号 /：表示指定一个值的增加幅度。例如 n/m表示从 n 开始，每次增加 m 的时间点执行
newCron.cron=0 * * * *
#配置任务的实现类，指向最前面的 MyTask 类，注意类的路径配置正确
newCron.class=com.cos.cmtgp.common.task.OrderTask
#配置该任务是否有效，如果为 false，则不会被处理，相当于一个开关变量，这个配置可以省略，省略时默认值为 true
newCron.enable=true



#最后再被被一点，cron4j 可以同时配置多个任务，以逗号分隔，以下代码同时配置了两个任务
#cron4j=taskAaa, taskBbb
#taskAaa.cron=0 * * * *
#taskAaa.class=com.xxx.TaskOne
#taskAaa.enable=true
#taskBbb.cron=0 * * * *
#taskBbb.class=com.xxx.OtherTask
#taskBbb.enable=true